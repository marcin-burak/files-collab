// <auto-generated />
using System;
using FilesCollab.Web.Dependencies.SqlServer.Application;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilesCollab.Web.Dependencies.SqlServer.Application.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240226195937_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Name");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.GroupRole", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupId", "RoleId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("GroupId", "RoleId"), false);

                    b.HasIndex("RoleId");

                    b.ToTable("GroupRoles");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.GroupWorkspace", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupId", "WorkspaceId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("GroupId", "WorkspaceId"), false);

                    b.HasIndex("WorkspaceId");

                    b.ToTable("GroupWorkspaces");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Name");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = "MANAGE_WORKSPACES",
                            Description = "Manage all workspaces.",
                            Name = "Manage workspaces"
                        });
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Name");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleId", "PermissionId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("RoleId", "PermissionId"), false);

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "GroupId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("UserId", "GroupId"), false);

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("UserId", "RoleId"), false);

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.UserWorkspace", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "WorkspaceId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("UserId", "WorkspaceId"), false);

                    b.HasIndex("WorkspaceId");

                    b.ToTable("UserWorkspaces");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Workspace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Name");

                    b.ToTable("Workspace");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.GroupRole", b =>
                {
                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Group", "Group")
                        .WithMany("GroupRoles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Role", "Role")
                        .WithMany("GroupRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.GroupWorkspace", b =>
                {
                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Group", "Group")
                        .WithMany("GroupWorkspaces")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Workspace", "Workspace")
                        .WithMany("GroupWorkspaces")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.RolePermission", b =>
                {
                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.UserGroup", b =>
                {
                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.UserRole", b =>
                {
                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.UserWorkspace", b =>
                {
                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.User", "User")
                        .WithMany("UserWorkspaces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Workspace", "Workspace")
                        .WithMany("UserWorkspaces")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Group", b =>
                {
                    b.Navigation("GroupRoles");

                    b.Navigation("GroupWorkspaces");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Role", b =>
                {
                    b.Navigation("GroupRoles");

                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.User", b =>
                {
                    b.Navigation("UserGroups");

                    b.Navigation("UserRoles");

                    b.Navigation("UserWorkspaces");
                });

            modelBuilder.Entity("FilesCollab.Web.Dependencies.SqlServer.Application.Entities.Workspace", b =>
                {
                    b.Navigation("GroupWorkspaces");

                    b.Navigation("UserWorkspaces");
                });
#pragma warning restore 612, 618
        }
    }
}
